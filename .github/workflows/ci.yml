name: Backend Quality CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/ci.yml'
      - '.github/actions/*'
  pull_request:
    branches: [main, develop]
    paths:
      - 'backend/**'
      - '.github/workflows/ci.yml'
      - '.github/actions/*'

jobs:
  install-deps:
    runs-on: ubuntu-latest
    outputs:
      cache-hit: ${{ steps.cache-pip.outputs.cache-hit }}
    steps:
      - uses: actions/checkout@v4

      - name: Cache pip dependencies
        id: cache-pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        uses: ./.github/actions/install-python-deps
        with:
          working-directory: backend

  lint:
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - uses: actions/checkout@v4

      - name: Run Python linting (composite action)
        uses: ./.github/actions/run-python-lint
        with:
          python-version: '3.13'

  security:
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - uses: actions/checkout@v4

      - name: Run security scan
        uses: ./.github/actions/run-security-scan
        with:
          python-version: '3.13'

  coverage:
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - uses: actions/checkout@v4

      - name: Run coverage report
        uses: ./.github/actions/run-python-coverage
        with:
          python-version: '3.13'

  test:
    runs-on: ubuntu-latest
    needs: install-deps
    steps:
      - uses: actions/checkout@v4

      - name: Run tests with secrets parsed inside composite
        uses: ./.github/actions/run-python-tests
        with:
          python-version: '3.13'
          env-json: ${{ secrets.ENV_VARS }}

  quality-summary:
    runs-on: ubuntu-latest
    needs: [test, coverage, security, lint]
    if: always()
    steps:
      - uses: actions/checkout@v4

      - name: Generate comprehensive quality report
        uses: ./.github/actions/generate-quality-summary
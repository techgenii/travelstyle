name: 

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'backend/**'
      - '.github/workflows/ci.yml'

permissions:
  contents: write
  pull-requests: read

env:
  PYTHON_VERSION: '3.13'
  WORKING_DIR: backend

jobs:
  # Reusable job template for all quality checks
  quality-check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - job: security
            needs_env: false
            make_target: ci-security
            summary_script: extract_security_score.py
            summary_file: security_summary.txt
            summary_format: "Security Issues Found: {score}"
          - job: lint
            needs_env: false
            make_target: ci-lint
            summary_script: extract_lint_score_simple.py
            summary_file: lint_summary.txt
            summary_format: "Lint Score: {score}/10"
      fail-fast: false
    
    name: ${{ matrix.job }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          
      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('backend/**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            
      - name: Install dependencies
        working-directory: ${{ env.WORKING_DIR }}
        run: make install-all
          
      - name: Run ${{ matrix.job }} check
        working-directory: ${{ env.WORKING_DIR }}
        run: make ${{ matrix.make_target }}
          
      - name: Generate summary
        working-directory: ${{ env.WORKING_DIR }}
        run: |
          chmod +x generate_summary.sh
          ./generate_summary.sh "${{ matrix.job }}" "${{ matrix.summary_script }}" "${{ matrix.summary_file }}" "${{ matrix.summary_format }}"
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ${{ matrix.job }}-report
          path: |
            ${{ env.WORKING_DIR }}/reports/
            ${{ env.WORKING_DIR }}/.pytest_cache/
            ${{ env.WORKING_DIR }}/pytest.log
            ${{ env.WORKING_DIR }}/${{ matrix.summary_file }}
          retention-days: 30
          
      - name: Upload summary
        uses: actions/upload-artifact@v4
        if: always() && matrix.job != 'test'
        with:
          name: ${{ matrix.job }}-summary
          path: ${{ env.WORKING_DIR }}/${{ matrix.summary_file }}
          retention-days: 7